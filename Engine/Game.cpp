/****************************************************************************************** 
 *	Chili DirectX Framework Version 16.07.20											  *	
 *	Game.cpp																			  *
 *	Copyright 2016 PlanetChili.net <http://www.planetchili.net>							  *
 *																						  *
 *	This file is part of The Chili DirectX Framework.									  *
 *																						  *
 *	The Chili DirectX Framework is free software: you can redistribute it and/or modify	  *
 *	it under the terms of the GNU General Public License as published by				  *
 *	the Free Software Foundation, either version 3 of the License, or					  *
 *	(at your option) any later version.													  *
 *																						  *
 *	The Chili DirectX Framework is distributed in the hope that it will be useful,		  *
 *	but WITHOUT ANY WARRANTY; without even the implied warranty of						  *
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the						  *
 *	GNU General Public License for more details.										  *
 *																						  *
 *	You should have received a copy of the GNU General Public License					  *
 *	along with The Chili DirectX Framework.  If not, see <http://www.gnu.org/licenses/>.  *
 ******************************************************************************************/
#include "MainWindow.h"
#include "Game.h"
#include <chrono>
#include "SpriteCodex.h"
#include <iostream>


Game::Game( MainWindow& wnd )
	:
	wnd( wnd ),
	gfx( wnd ),
	tLeft( Vei2(100,100) )
{
	char sudokoStart[9 * 9] =
	//{ '.','.','6','5','.','8','4','.','.','5','2','.','.','.','.','.','.','.','.','8','7','.','.','.','.','3','1','.','.','3','.','1','.','.','8','.','9','.','.','8','6','3','.','.','5','.','5','.','.','9','.','6','.','.','1','3','.','.','.','.','2','5','.','.','.','.','.','.','.','.','7','4','.','.','5','2','.','6','3','.','.' };
	//
	//TEST FOR UNSOLVABLE SUDOKO
	/*
	{	'3','1','6',    '5','7','8',    '4','.','2', 
		'.','.','.',    '1','3','4',    '7','6','8',
		'4','8','7',    '6','2','.',    '5','3','.',

		'2','6','3',    '4','1','5',    '9','8','7',
		'9','7','4',    '8','6','3',    '1','2','5',
		'8','5','1',    '7','9','2',    '6','4','3',

		'1','3','8',    '9','4','7',    '2','5','6',
		'6','9','2',    '3','5','1',    '8','7','4',
		'7','4','5',    '2','8','6',    '3','.','1',
	};
	*/
	
	//TEST FOR 17 CLUE SUDOKO
	//*
	{	'.','.','.',    '7','.','.',    '.', '.', '.',
		'1','.','.',    '.','.','.',    '.', '.', '.',
		'.','.','.',    '4','3','.',    '2', '.', '.',
					    			    
		'.','.','.',    '.','.','.',    '.', '.', '6',
		'.','.','.',    '5','.','9',    '.', '.', '.',
		'.','.','.',    '.','.','.',    '4', '1', '8',
					    			    
		'.','.','.',    '.','8','1',    '.', '.', '.',
		'.','.','2',    '.','.','.',    '.', '5', '.',
		'.','4','.',    '.','.','.',    '3', '.', '.',
	};
	//*/

	//{'.','.','6','5','.','8','4','.','.','5','2','.','.','.','.','.','.','.','.','8','7','.','.','.','.','3','1','.','.','3','.','1','.','.','8','.','9','.','.','8','6','3','.','.','5','.','5','.','.','9','.','6','.','.','1','3','.','.','.','.','2','5','.','.','.','.','.','.','.','.','7','4','.','.','5','2','.','6','3','.','.'};
	//{'.','.','2','4','6','.','8','1','.','7','4','.','8','9','3','6','2','5','6','8','5','2','7','1','4','3','9','.','5','4','1','3','8','7','9','6','8','3','9','6','2','7','1','5','4','.','7','6','9','5','4','2','8','3','9','6','7','5','8','2','3','4','1','4','2','3','7','1','9','5','6','8','5','1','8','3','4','6','9','7','2'};
	//{'4','5','.','6','.','3','.','1','8','.','.','1','2','.','.','.','.','5','7','2','.','.','.','.','9','.','6','5','6','.','.','.','.','3','.','.','9','.','.','5','1','4','.','.','2','.','.','4','.','.','.','.','5','9','8','.','2','.','4','.','.','9','3','3','.','.','.','.','6','1','.','.','1','9','.','7','.','2','.','8','4'};
	//{'2','9','.','.','.','.','8','3','.','.','.','.','.','2','.','9','7','.','.','.','.','1','.','9','4','.','2','8','4','5','7','6','1','2','9','3','6','.','.','.','.','.','5','4','7','.','.','9','.','4','5','.','.','8','9','.','3','4','.','7','.','.','.','.','6','.','.','3','.','7','.','9','.','5','.','.','.','.','3','8','4'};
	//{'.','5','.','.','4','8','9','.','.','.','.','.','.','.','.','1','4','2','.','9','.','.','6','.','.','.','.','.','7','.','.','.','.','.','.','8','.','.','.','.','5','.','.','.','.','.','6','.','.','.','7','.','.','.','.','.','4','.','2','.','.','.','.','.','.','.','.','9','.','.','8','.','8','.','.','.','7','4','.','.','.'};
	//{'.','.','.','.','2','.','.','.','.','.','.','.','.','3','1','.','.','.','.','.','.','.','.','.','.','9','.','.','.','.','.','6','4','.','5','.','.','.','2','.','.','.','6','.','.','.','8','.','3','9','.','.','.','.','.','.','.','7','.','.','.','.','.','7','.','1','.','8','.','.','.','.','.','6','9','.','5','.','4','3','.'};

	
	
	field = Field(sudokoStart);
}

void Game::Go()
{
	
	
	
	UpdateModel();
	gfx.BeginFrame();
	ComposeFrame();
	gfx.EndFrame();
}

void Game::UpdateModel()
{
	/*using std::chrono::steady_clock;

	float durationSeconds = 0;
	std::chrono::steady_clock::time_point start = steady_clock::now();
	while (durationSeconds < 1.0f)
	{
		auto end = std::chrono::steady_clock::now();
		std::chrono::duration<float> runtime = end - start;
		durationSeconds = runtime.count();
	}
	*/
	
	if (gameState == 1)
	{
		if (!field.IsViable())
		{
			gameState = 0;
		}
		else if (field.SolutionExists(gfx))
		{
			gameState = 2;
		}
		else
		{
			gameState = 0;
		}
	}
}

void Game::ComposeFrame()
{
	if (gameState ==2)
	{
		//std::cout << "Sudokidoki! First solution found:" << std::endl;
		field.PrintGfx(Vei2(100, 100), gfx);
		gfx.DrawRect(300, 300, 350, 350, Colors::Green);
	}
	else if (gameState == 0)
	{
		//std::cout << "No solution found" << std::endl;
		field.PrintGfx(Vei2(100, 100), gfx);
		gfx.DrawRect(300, 300, 350, 350, Colors::Red);;
	}

	
	
	
}
